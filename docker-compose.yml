version: '3'

services:
  node-rest-api:
    build: .
    container_name: node-rest-api-app
    environment:
      - NODE_ENV=production
      - PORT=3000
      - REDIS_URL=redis://node-rest-api-cache
      - PGHOST=node-rest-api-db
      - PGPORT=5432
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - PGDATABASE=api-db
    command: sh -c './wait-for-postgres.sh node-rest-api-db -- yarn run server:init'
    ports:
      - 3000:3000
    depends_on:
      - postgres
      - redis

  node-rest-client:
    build: ../node-rest-client
    container_name: node-rest-client
    environment:
      - NODE_ENV=production
    ports:
      - 8080:8080

  worker:
    build: .
    container_name: node-rest-api-worker
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://node-rest-api-cache
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
    command: yarn run worker
    depends_on:
      - redis

  postgres:
    image: postgres:11.1-alpine
    container_name: node-rest-api-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=api-db

  redis:
    image: redis
    container_name: node-rest-api-cache
    expose:
      - 6379
